

#pragma once

#ifndef GO_MOC_H
#define GO_MOC_H

#include <stdint.h>

#ifdef __cplusplus
class QmlBridge;
void QmlBridge_QmlBridge_QRegisterMetaTypes();
class Title;
void Title_Title_QRegisterMetaTypes();
class TitleModel;
void TitleModel_TitleModel_QRegisterMetaTypes();
class DictTab;
void DictTab_DictTab_QRegisterMetaTypes();
class DictTabModel;
void DictTabModel_DictTabModel_QRegisterMetaTypes();
extern "C" {
#endif

struct Moc_PackedString { char* data; long long len; };
struct Moc_PackedList { void* data; long long len; };
void DictTabModel_AddDictTab(void* ptr, void* v0);
void DictTabModel_RemoveDictTab(void* ptr, int row);
struct Moc_PackedList DictTabModel_Roles(void* ptr);
struct Moc_PackedList DictTabModel_RolesDefault(void* ptr);
void DictTabModel_SetRoles(void* ptr, void* roles);
void DictTabModel_SetRolesDefault(void* ptr, void* roles);
void DictTabModel_ConnectRolesChanged(void* ptr);
void DictTabModel_DisconnectRolesChanged(void* ptr);
void DictTabModel_RolesChanged(void* ptr, void* roles);
struct Moc_PackedList DictTabModel_DictTab(void* ptr);
struct Moc_PackedList DictTabModel_DictTabDefault(void* ptr);
void DictTabModel_SetDictTab(void* ptr, void* dictTab);
void DictTabModel_SetDictTabDefault(void* ptr, void* dictTab);
void DictTabModel_ConnectDictTabChanged(void* ptr);
void DictTabModel_DisconnectDictTabChanged(void* ptr);
void DictTabModel_DictTabChanged(void* ptr, void* dictTab);
int DictTabModel_DictTabModel_QRegisterMetaType();
int DictTabModel_DictTabModel_QRegisterMetaType2(char* typeName);
int DictTabModel_DictTabModel_QmlRegisterType();
int DictTabModel_DictTabModel_QmlRegisterType2(char* uri, int versionMajor, int versionMinor, char* qmlName);
int DictTabModel_____setItemData_keyList_atList(void* ptr, int i);
void DictTabModel_____setItemData_keyList_setList(void* ptr, int i);
void* DictTabModel_____setItemData_keyList_newList(void* ptr);
int DictTabModel_____roleNames_keyList_atList(void* ptr, int i);
void DictTabModel_____roleNames_keyList_setList(void* ptr, int i);
void* DictTabModel_____roleNames_keyList_newList(void* ptr);
int DictTabModel_____itemData_keyList_atList(void* ptr, int i);
void DictTabModel_____itemData_keyList_setList(void* ptr, int i);
void* DictTabModel_____itemData_keyList_newList(void* ptr);
void* DictTabModel___setItemData_roles_atList(void* ptr, int i);
void DictTabModel___setItemData_roles_setList(void* ptr, int key, void* i);
void* DictTabModel___setItemData_roles_newList(void* ptr);
struct Moc_PackedList DictTabModel___setItemData_keyList(void* ptr);
void* DictTabModel___changePersistentIndexList_from_atList(void* ptr, int i);
void DictTabModel___changePersistentIndexList_from_setList(void* ptr, void* i);
void* DictTabModel___changePersistentIndexList_from_newList(void* ptr);
void* DictTabModel___changePersistentIndexList_to_atList(void* ptr, int i);
void DictTabModel___changePersistentIndexList_to_setList(void* ptr, void* i);
void* DictTabModel___changePersistentIndexList_to_newList(void* ptr);
int DictTabModel___dataChanged_roles_atList(void* ptr, int i);
void DictTabModel___dataChanged_roles_setList(void* ptr, int i);
void* DictTabModel___dataChanged_roles_newList(void* ptr);
void* DictTabModel___layoutAboutToBeChanged_parents_atList(void* ptr, int i);
void DictTabModel___layoutAboutToBeChanged_parents_setList(void* ptr, void* i);
void* DictTabModel___layoutAboutToBeChanged_parents_newList(void* ptr);
void* DictTabModel___layoutChanged_parents_atList(void* ptr, int i);
void DictTabModel___layoutChanged_parents_setList(void* ptr, void* i);
void* DictTabModel___layoutChanged_parents_newList(void* ptr);
void* DictTabModel___roleNames_atList(void* ptr, int i);
void DictTabModel___roleNames_setList(void* ptr, int key, void* i);
void* DictTabModel___roleNames_newList(void* ptr);
struct Moc_PackedList DictTabModel___roleNames_keyList(void* ptr);
void* DictTabModel___itemData_atList(void* ptr, int i);
void DictTabModel___itemData_setList(void* ptr, int key, void* i);
void* DictTabModel___itemData_newList(void* ptr);
struct Moc_PackedList DictTabModel___itemData_keyList(void* ptr);
void* DictTabModel___mimeData_indexes_atList(void* ptr, int i);
void DictTabModel___mimeData_indexes_setList(void* ptr, void* i);
void* DictTabModel___mimeData_indexes_newList(void* ptr);
void* DictTabModel___match_atList(void* ptr, int i);
void DictTabModel___match_setList(void* ptr, void* i);
void* DictTabModel___match_newList(void* ptr);
void* DictTabModel___persistentIndexList_atList(void* ptr, int i);
void DictTabModel___persistentIndexList_setList(void* ptr, void* i);
void* DictTabModel___persistentIndexList_newList(void* ptr);
int DictTabModel_____doSetRoleNames_keyList_atList(void* ptr, int i);
void DictTabModel_____doSetRoleNames_keyList_setList(void* ptr, int i);
void* DictTabModel_____doSetRoleNames_keyList_newList(void* ptr);
int DictTabModel_____setRoleNames_keyList_atList(void* ptr, int i);
void DictTabModel_____setRoleNames_keyList_setList(void* ptr, int i);
void* DictTabModel_____setRoleNames_keyList_newList(void* ptr);
void* DictTabModel___dynamicPropertyNames_atList(void* ptr, int i);
void DictTabModel___dynamicPropertyNames_setList(void* ptr, void* i);
void* DictTabModel___dynamicPropertyNames_newList(void* ptr);
void* DictTabModel___findChildren_atList2(void* ptr, int i);
void DictTabModel___findChildren_setList2(void* ptr, void* i);
void* DictTabModel___findChildren_newList2(void* ptr);
void* DictTabModel___findChildren_atList3(void* ptr, int i);
void DictTabModel___findChildren_setList3(void* ptr, void* i);
void* DictTabModel___findChildren_newList3(void* ptr);
void* DictTabModel___findChildren_atList(void* ptr, int i);
void DictTabModel___findChildren_setList(void* ptr, void* i);
void* DictTabModel___findChildren_newList(void* ptr);
void* DictTabModel___children_atList(void* ptr, int i);
void DictTabModel___children_setList(void* ptr, void* i);
void* DictTabModel___children_newList(void* ptr);
void* DictTabModel___roles_atList(void* ptr, int i);
void DictTabModel___roles_setList(void* ptr, int key, void* i);
void* DictTabModel___roles_newList(void* ptr);
struct Moc_PackedList DictTabModel___roles_keyList(void* ptr);
void* DictTabModel___setRoles_roles_atList(void* ptr, int i);
void DictTabModel___setRoles_roles_setList(void* ptr, int key, void* i);
void* DictTabModel___setRoles_roles_newList(void* ptr);
struct Moc_PackedList DictTabModel___setRoles_keyList(void* ptr);
void* DictTabModel___rolesChanged_roles_atList(void* ptr, int i);
void DictTabModel___rolesChanged_roles_setList(void* ptr, int key, void* i);
void* DictTabModel___rolesChanged_roles_newList(void* ptr);
struct Moc_PackedList DictTabModel___rolesChanged_keyList(void* ptr);
void* DictTabModel___dictTab_atList(void* ptr, int i);
void DictTabModel___dictTab_setList(void* ptr, void* i);
void* DictTabModel___dictTab_newList(void* ptr);
void* DictTabModel___setDictTab_dictTab_atList(void* ptr, int i);
void DictTabModel___setDictTab_dictTab_setList(void* ptr, void* i);
void* DictTabModel___setDictTab_dictTab_newList(void* ptr);
void* DictTabModel___dictTabChanged_dictTab_atList(void* ptr, int i);
void DictTabModel___dictTabChanged_dictTab_setList(void* ptr, void* i);
void* DictTabModel___dictTabChanged_dictTab_newList(void* ptr);
int DictTabModel_____roles_keyList_atList(void* ptr, int i);
void DictTabModel_____roles_keyList_setList(void* ptr, int i);
void* DictTabModel_____roles_keyList_newList(void* ptr);
int DictTabModel_____setRoles_keyList_atList(void* ptr, int i);
void DictTabModel_____setRoles_keyList_setList(void* ptr, int i);
void* DictTabModel_____setRoles_keyList_newList(void* ptr);
int DictTabModel_____rolesChanged_keyList_atList(void* ptr, int i);
void DictTabModel_____rolesChanged_keyList_setList(void* ptr, int i);
void* DictTabModel_____rolesChanged_keyList_newList(void* ptr);
void* DictTabModel_NewDictTabModel(void* parent);
void DictTabModel_DestroyDictTabModel(void* ptr);
char DictTabModel_DropMimeDataDefault(void* ptr, void* data, long long action, int row, int column, void* parent);
void* DictTabModel_IndexDefault(void* ptr, int row, int column, void* parent);
void* DictTabModel_SiblingDefault(void* ptr, int row, int column, void* idx);
long long DictTabModel_FlagsDefault(void* ptr, void* index);
char DictTabModel_InsertColumnsDefault(void* ptr, int column, int count, void* parent);
char DictTabModel_InsertRowsDefault(void* ptr, int row, int count, void* parent);
char DictTabModel_MoveColumnsDefault(void* ptr, void* sourceParent, int sourceColumn, int count, void* destinationParent, int destinationChild);
char DictTabModel_MoveRowsDefault(void* ptr, void* sourceParent, int sourceRow, int count, void* destinationParent, int destinationChild);
char DictTabModel_RemoveColumnsDefault(void* ptr, int column, int count, void* parent);
char DictTabModel_RemoveRowsDefault(void* ptr, int row, int count, void* parent);
char DictTabModel_SetDataDefault(void* ptr, void* index, void* value, int role);
char DictTabModel_SetHeaderDataDefault(void* ptr, int section, long long orientation, void* value, int role);
char DictTabModel_SetItemDataDefault(void* ptr, void* index, void* roles);
char DictTabModel_SubmitDefault(void* ptr);
void DictTabModel_FetchMoreDefault(void* ptr, void* parent);
void DictTabModel_ResetInternalDataDefault(void* ptr);
void DictTabModel_RevertDefault(void* ptr);
void DictTabModel_SortDefault(void* ptr, int column, long long order);
struct Moc_PackedList DictTabModel_RoleNamesDefault(void* ptr);
struct Moc_PackedList DictTabModel_ItemDataDefault(void* ptr, void* index);
void* DictTabModel_MimeDataDefault(void* ptr, void* indexes);
void* DictTabModel_BuddyDefault(void* ptr, void* index);
void* DictTabModel_ParentDefault(void* ptr, void* index);
struct Moc_PackedList DictTabModel_MatchDefault(void* ptr, void* start, int role, void* value, int hits, long long flags);
void* DictTabModel_SpanDefault(void* ptr, void* index);
struct Moc_PackedString DictTabModel_MimeTypesDefault(void* ptr);
void* DictTabModel_DataDefault(void* ptr, void* index, int role);
void* DictTabModel_HeaderDataDefault(void* ptr, int section, long long orientation, int role);
long long DictTabModel_SupportedDragActionsDefault(void* ptr);
long long DictTabModel_SupportedDropActionsDefault(void* ptr);
char DictTabModel_CanDropMimeDataDefault(void* ptr, void* data, long long action, int row, int column, void* parent);
char DictTabModel_CanFetchMoreDefault(void* ptr, void* parent);
char DictTabModel_HasChildrenDefault(void* ptr, void* parent);
int DictTabModel_ColumnCountDefault(void* ptr, void* parent);
int DictTabModel_RowCountDefault(void* ptr, void* parent);
char DictTabModel_EventDefault(void* ptr, void* e);
char DictTabModel_EventFilterDefault(void* ptr, void* watched, void* event);
void DictTabModel_ChildEventDefault(void* ptr, void* event);
void DictTabModel_ConnectNotifyDefault(void* ptr, void* sign);
void DictTabModel_CustomEventDefault(void* ptr, void* event);
void DictTabModel_DeleteLaterDefault(void* ptr);
void DictTabModel_DisconnectNotifyDefault(void* ptr, void* sign);
void DictTabModel_TimerEventDefault(void* ptr, void* event);
;
void QmlBridge_ConnectOnSearchInputFinished(void* ptr);
void QmlBridge_DisconnectOnSearchInputFinished(void* ptr);
void QmlBridge_OnSearchInputFinished(void* ptr, struct Moc_PackedString text);
void QmlBridge_ConnectOnBackButtonClicked(void* ptr);
void QmlBridge_DisconnectOnBackButtonClicked(void* ptr);
void QmlBridge_OnBackButtonClicked(void* ptr);
void QmlBridge_ConnectOnForwardButtonClicked(void* ptr);
void QmlBridge_DisconnectOnForwardButtonClicked(void* ptr);
void QmlBridge_OnForwardButtonClicked(void* ptr);
void QmlBridge_ConnectOnTitleClicked(void* ptr);
void QmlBridge_DisconnectOnTitleClicked(void* ptr);
void QmlBridge_OnTitleClicked(void* ptr, int index);
void QmlBridge_ConnectSetViewText(void* ptr);
void QmlBridge_DisconnectSetViewText(void* ptr);
void QmlBridge_SetViewText(void* ptr, struct Moc_PackedString text);
int QmlBridge_QmlBridge_QRegisterMetaType();
int QmlBridge_QmlBridge_QRegisterMetaType2(char* typeName);
int QmlBridge_QmlBridge_QmlRegisterType();
int QmlBridge_QmlBridge_QmlRegisterType2(char* uri, int versionMajor, int versionMinor, char* qmlName);
void* QmlBridge___dynamicPropertyNames_atList(void* ptr, int i);
void QmlBridge___dynamicPropertyNames_setList(void* ptr, void* i);
void* QmlBridge___dynamicPropertyNames_newList(void* ptr);
void* QmlBridge___findChildren_atList2(void* ptr, int i);
void QmlBridge___findChildren_setList2(void* ptr, void* i);
void* QmlBridge___findChildren_newList2(void* ptr);
void* QmlBridge___findChildren_atList3(void* ptr, int i);
void QmlBridge___findChildren_setList3(void* ptr, void* i);
void* QmlBridge___findChildren_newList3(void* ptr);
void* QmlBridge___findChildren_atList(void* ptr, int i);
void QmlBridge___findChildren_setList(void* ptr, void* i);
void* QmlBridge___findChildren_newList(void* ptr);
void* QmlBridge___children_atList(void* ptr, int i);
void QmlBridge___children_setList(void* ptr, void* i);
void* QmlBridge___children_newList(void* ptr);
void* QmlBridge_NewQmlBridge(void* parent);
void QmlBridge_DestroyQmlBridge(void* ptr);
void QmlBridge_DestroyQmlBridgeDefault(void* ptr);
char QmlBridge_EventDefault(void* ptr, void* e);
char QmlBridge_EventFilterDefault(void* ptr, void* watched, void* event);
void QmlBridge_ChildEventDefault(void* ptr, void* event);
void QmlBridge_ConnectNotifyDefault(void* ptr, void* sign);
void QmlBridge_CustomEventDefault(void* ptr, void* event);
void QmlBridge_DeleteLaterDefault(void* ptr);
void QmlBridge_DisconnectNotifyDefault(void* ptr, void* sign);
void QmlBridge_TimerEventDefault(void* ptr, void* event);
;
struct Moc_PackedString Title_TitleName(void* ptr);
struct Moc_PackedString Title_TitleNameDefault(void* ptr);
void Title_SetTitleName(void* ptr, struct Moc_PackedString titleName);
void Title_SetTitleNameDefault(void* ptr, struct Moc_PackedString titleName);
void Title_ConnectTitleNameChanged(void* ptr);
void Title_DisconnectTitleNameChanged(void* ptr);
void Title_TitleNameChanged(void* ptr, struct Moc_PackedString titleName);
struct Moc_PackedString Title_DictName(void* ptr);
struct Moc_PackedString Title_DictNameDefault(void* ptr);
void Title_SetDictName(void* ptr, struct Moc_PackedString dictName);
void Title_SetDictNameDefault(void* ptr, struct Moc_PackedString dictName);
void Title_ConnectDictNameChanged(void* ptr);
void Title_DisconnectDictNameChanged(void* ptr);
void Title_DictNameChanged(void* ptr, struct Moc_PackedString dictName);
int Title_Title_QRegisterMetaType();
int Title_Title_QRegisterMetaType2(char* typeName);
int Title_Title_QmlRegisterType();
int Title_Title_QmlRegisterType2(char* uri, int versionMajor, int versionMinor, char* qmlName);
void* Title___dynamicPropertyNames_atList(void* ptr, int i);
void Title___dynamicPropertyNames_setList(void* ptr, void* i);
void* Title___dynamicPropertyNames_newList(void* ptr);
void* Title___findChildren_atList2(void* ptr, int i);
void Title___findChildren_setList2(void* ptr, void* i);
void* Title___findChildren_newList2(void* ptr);
void* Title___findChildren_atList3(void* ptr, int i);
void Title___findChildren_setList3(void* ptr, void* i);
void* Title___findChildren_newList3(void* ptr);
void* Title___findChildren_atList(void* ptr, int i);
void Title___findChildren_setList(void* ptr, void* i);
void* Title___findChildren_newList(void* ptr);
void* Title___children_atList(void* ptr, int i);
void Title___children_setList(void* ptr, void* i);
void* Title___children_newList(void* ptr);
void* Title_NewTitle(void* parent);
void Title_DestroyTitle(void* ptr);
void Title_DestroyTitleDefault(void* ptr);
char Title_EventDefault(void* ptr, void* e);
char Title_EventFilterDefault(void* ptr, void* watched, void* event);
void Title_ChildEventDefault(void* ptr, void* event);
void Title_ConnectNotifyDefault(void* ptr, void* sign);
void Title_CustomEventDefault(void* ptr, void* event);
void Title_DeleteLaterDefault(void* ptr);
void Title_DisconnectNotifyDefault(void* ptr, void* sign);
void Title_TimerEventDefault(void* ptr, void* event);
;
void TitleModel_AddTitle(void* ptr, void* v0);
void TitleModel_RemoveTitle(void* ptr, int row);
struct Moc_PackedList TitleModel_Roles(void* ptr);
struct Moc_PackedList TitleModel_RolesDefault(void* ptr);
void TitleModel_SetRoles(void* ptr, void* roles);
void TitleModel_SetRolesDefault(void* ptr, void* roles);
void TitleModel_ConnectRolesChanged(void* ptr);
void TitleModel_DisconnectRolesChanged(void* ptr);
void TitleModel_RolesChanged(void* ptr, void* roles);
struct Moc_PackedList TitleModel_Title(void* ptr);
struct Moc_PackedList TitleModel_TitleDefault(void* ptr);
void TitleModel_SetTitle(void* ptr, void* title);
void TitleModel_SetTitleDefault(void* ptr, void* title);
void TitleModel_ConnectTitleChanged(void* ptr);
void TitleModel_DisconnectTitleChanged(void* ptr);
void TitleModel_TitleChanged(void* ptr, void* title);
int TitleModel_TitleModel_QRegisterMetaType();
int TitleModel_TitleModel_QRegisterMetaType2(char* typeName);
int TitleModel_TitleModel_QmlRegisterType();
int TitleModel_TitleModel_QmlRegisterType2(char* uri, int versionMajor, int versionMinor, char* qmlName);
int TitleModel_____setItemData_keyList_atList(void* ptr, int i);
void TitleModel_____setItemData_keyList_setList(void* ptr, int i);
void* TitleModel_____setItemData_keyList_newList(void* ptr);
int TitleModel_____roleNames_keyList_atList(void* ptr, int i);
void TitleModel_____roleNames_keyList_setList(void* ptr, int i);
void* TitleModel_____roleNames_keyList_newList(void* ptr);
int TitleModel_____itemData_keyList_atList(void* ptr, int i);
void TitleModel_____itemData_keyList_setList(void* ptr, int i);
void* TitleModel_____itemData_keyList_newList(void* ptr);
void* TitleModel___setItemData_roles_atList(void* ptr, int i);
void TitleModel___setItemData_roles_setList(void* ptr, int key, void* i);
void* TitleModel___setItemData_roles_newList(void* ptr);
struct Moc_PackedList TitleModel___setItemData_keyList(void* ptr);
void* TitleModel___changePersistentIndexList_from_atList(void* ptr, int i);
void TitleModel___changePersistentIndexList_from_setList(void* ptr, void* i);
void* TitleModel___changePersistentIndexList_from_newList(void* ptr);
void* TitleModel___changePersistentIndexList_to_atList(void* ptr, int i);
void TitleModel___changePersistentIndexList_to_setList(void* ptr, void* i);
void* TitleModel___changePersistentIndexList_to_newList(void* ptr);
int TitleModel___dataChanged_roles_atList(void* ptr, int i);
void TitleModel___dataChanged_roles_setList(void* ptr, int i);
void* TitleModel___dataChanged_roles_newList(void* ptr);
void* TitleModel___layoutAboutToBeChanged_parents_atList(void* ptr, int i);
void TitleModel___layoutAboutToBeChanged_parents_setList(void* ptr, void* i);
void* TitleModel___layoutAboutToBeChanged_parents_newList(void* ptr);
void* TitleModel___layoutChanged_parents_atList(void* ptr, int i);
void TitleModel___layoutChanged_parents_setList(void* ptr, void* i);
void* TitleModel___layoutChanged_parents_newList(void* ptr);
void* TitleModel___roleNames_atList(void* ptr, int i);
void TitleModel___roleNames_setList(void* ptr, int key, void* i);
void* TitleModel___roleNames_newList(void* ptr);
struct Moc_PackedList TitleModel___roleNames_keyList(void* ptr);
void* TitleModel___itemData_atList(void* ptr, int i);
void TitleModel___itemData_setList(void* ptr, int key, void* i);
void* TitleModel___itemData_newList(void* ptr);
struct Moc_PackedList TitleModel___itemData_keyList(void* ptr);
void* TitleModel___mimeData_indexes_atList(void* ptr, int i);
void TitleModel___mimeData_indexes_setList(void* ptr, void* i);
void* TitleModel___mimeData_indexes_newList(void* ptr);
void* TitleModel___match_atList(void* ptr, int i);
void TitleModel___match_setList(void* ptr, void* i);
void* TitleModel___match_newList(void* ptr);
void* TitleModel___persistentIndexList_atList(void* ptr, int i);
void TitleModel___persistentIndexList_setList(void* ptr, void* i);
void* TitleModel___persistentIndexList_newList(void* ptr);
int TitleModel_____doSetRoleNames_keyList_atList(void* ptr, int i);
void TitleModel_____doSetRoleNames_keyList_setList(void* ptr, int i);
void* TitleModel_____doSetRoleNames_keyList_newList(void* ptr);
int TitleModel_____setRoleNames_keyList_atList(void* ptr, int i);
void TitleModel_____setRoleNames_keyList_setList(void* ptr, int i);
void* TitleModel_____setRoleNames_keyList_newList(void* ptr);
void* TitleModel___dynamicPropertyNames_atList(void* ptr, int i);
void TitleModel___dynamicPropertyNames_setList(void* ptr, void* i);
void* TitleModel___dynamicPropertyNames_newList(void* ptr);
void* TitleModel___findChildren_atList2(void* ptr, int i);
void TitleModel___findChildren_setList2(void* ptr, void* i);
void* TitleModel___findChildren_newList2(void* ptr);
void* TitleModel___findChildren_atList3(void* ptr, int i);
void TitleModel___findChildren_setList3(void* ptr, void* i);
void* TitleModel___findChildren_newList3(void* ptr);
void* TitleModel___findChildren_atList(void* ptr, int i);
void TitleModel___findChildren_setList(void* ptr, void* i);
void* TitleModel___findChildren_newList(void* ptr);
void* TitleModel___children_atList(void* ptr, int i);
void TitleModel___children_setList(void* ptr, void* i);
void* TitleModel___children_newList(void* ptr);
void* TitleModel___roles_atList(void* ptr, int i);
void TitleModel___roles_setList(void* ptr, int key, void* i);
void* TitleModel___roles_newList(void* ptr);
struct Moc_PackedList TitleModel___roles_keyList(void* ptr);
void* TitleModel___setRoles_roles_atList(void* ptr, int i);
void TitleModel___setRoles_roles_setList(void* ptr, int key, void* i);
void* TitleModel___setRoles_roles_newList(void* ptr);
struct Moc_PackedList TitleModel___setRoles_keyList(void* ptr);
void* TitleModel___rolesChanged_roles_atList(void* ptr, int i);
void TitleModel___rolesChanged_roles_setList(void* ptr, int key, void* i);
void* TitleModel___rolesChanged_roles_newList(void* ptr);
struct Moc_PackedList TitleModel___rolesChanged_keyList(void* ptr);
void* TitleModel___title_atList(void* ptr, int i);
void TitleModel___title_setList(void* ptr, void* i);
void* TitleModel___title_newList(void* ptr);
void* TitleModel___setTitle_title_atList(void* ptr, int i);
void TitleModel___setTitle_title_setList(void* ptr, void* i);
void* TitleModel___setTitle_title_newList(void* ptr);
void* TitleModel___titleChanged_title_atList(void* ptr, int i);
void TitleModel___titleChanged_title_setList(void* ptr, void* i);
void* TitleModel___titleChanged_title_newList(void* ptr);
int TitleModel_____roles_keyList_atList(void* ptr, int i);
void TitleModel_____roles_keyList_setList(void* ptr, int i);
void* TitleModel_____roles_keyList_newList(void* ptr);
int TitleModel_____setRoles_keyList_atList(void* ptr, int i);
void TitleModel_____setRoles_keyList_setList(void* ptr, int i);
void* TitleModel_____setRoles_keyList_newList(void* ptr);
int TitleModel_____rolesChanged_keyList_atList(void* ptr, int i);
void TitleModel_____rolesChanged_keyList_setList(void* ptr, int i);
void* TitleModel_____rolesChanged_keyList_newList(void* ptr);
void* TitleModel_NewTitleModel(void* parent);
void TitleModel_DestroyTitleModel(void* ptr);
char TitleModel_DropMimeDataDefault(void* ptr, void* data, long long action, int row, int column, void* parent);
void* TitleModel_IndexDefault(void* ptr, int row, int column, void* parent);
void* TitleModel_SiblingDefault(void* ptr, int row, int column, void* idx);
long long TitleModel_FlagsDefault(void* ptr, void* index);
char TitleModel_InsertColumnsDefault(void* ptr, int column, int count, void* parent);
char TitleModel_InsertRowsDefault(void* ptr, int row, int count, void* parent);
char TitleModel_MoveColumnsDefault(void* ptr, void* sourceParent, int sourceColumn, int count, void* destinationParent, int destinationChild);
char TitleModel_MoveRowsDefault(void* ptr, void* sourceParent, int sourceRow, int count, void* destinationParent, int destinationChild);
char TitleModel_RemoveColumnsDefault(void* ptr, int column, int count, void* parent);
char TitleModel_RemoveRowsDefault(void* ptr, int row, int count, void* parent);
char TitleModel_SetDataDefault(void* ptr, void* index, void* value, int role);
char TitleModel_SetHeaderDataDefault(void* ptr, int section, long long orientation, void* value, int role);
char TitleModel_SetItemDataDefault(void* ptr, void* index, void* roles);
char TitleModel_SubmitDefault(void* ptr);
void TitleModel_FetchMoreDefault(void* ptr, void* parent);
void TitleModel_ResetInternalDataDefault(void* ptr);
void TitleModel_RevertDefault(void* ptr);
void TitleModel_SortDefault(void* ptr, int column, long long order);
struct Moc_PackedList TitleModel_RoleNamesDefault(void* ptr);
struct Moc_PackedList TitleModel_ItemDataDefault(void* ptr, void* index);
void* TitleModel_MimeDataDefault(void* ptr, void* indexes);
void* TitleModel_BuddyDefault(void* ptr, void* index);
void* TitleModel_ParentDefault(void* ptr, void* index);
struct Moc_PackedList TitleModel_MatchDefault(void* ptr, void* start, int role, void* value, int hits, long long flags);
void* TitleModel_SpanDefault(void* ptr, void* index);
struct Moc_PackedString TitleModel_MimeTypesDefault(void* ptr);
void* TitleModel_DataDefault(void* ptr, void* index, int role);
void* TitleModel_HeaderDataDefault(void* ptr, int section, long long orientation, int role);
long long TitleModel_SupportedDragActionsDefault(void* ptr);
long long TitleModel_SupportedDropActionsDefault(void* ptr);
char TitleModel_CanDropMimeDataDefault(void* ptr, void* data, long long action, int row, int column, void* parent);
char TitleModel_CanFetchMoreDefault(void* ptr, void* parent);
char TitleModel_HasChildrenDefault(void* ptr, void* parent);
int TitleModel_ColumnCountDefault(void* ptr, void* parent);
int TitleModel_RowCountDefault(void* ptr, void* parent);
char TitleModel_EventDefault(void* ptr, void* e);
char TitleModel_EventFilterDefault(void* ptr, void* watched, void* event);
void TitleModel_ChildEventDefault(void* ptr, void* event);
void TitleModel_ConnectNotifyDefault(void* ptr, void* sign);
void TitleModel_CustomEventDefault(void* ptr, void* event);
void TitleModel_DeleteLaterDefault(void* ptr);
void TitleModel_DisconnectNotifyDefault(void* ptr, void* sign);
void TitleModel_TimerEventDefault(void* ptr, void* event);
;
struct Moc_PackedString DictTab_DictName(void* ptr);
struct Moc_PackedString DictTab_DictNameDefault(void* ptr);
void DictTab_SetDictName(void* ptr, struct Moc_PackedString dictName);
void DictTab_SetDictNameDefault(void* ptr, struct Moc_PackedString dictName);
void DictTab_ConnectDictNameChanged(void* ptr);
void DictTab_DisconnectDictNameChanged(void* ptr);
void DictTab_DictNameChanged(void* ptr, struct Moc_PackedString dictName);
int DictTab_DictTab_QRegisterMetaType();
int DictTab_DictTab_QRegisterMetaType2(char* typeName);
int DictTab_DictTab_QmlRegisterType();
int DictTab_DictTab_QmlRegisterType2(char* uri, int versionMajor, int versionMinor, char* qmlName);
void* DictTab___dynamicPropertyNames_atList(void* ptr, int i);
void DictTab___dynamicPropertyNames_setList(void* ptr, void* i);
void* DictTab___dynamicPropertyNames_newList(void* ptr);
void* DictTab___findChildren_atList2(void* ptr, int i);
void DictTab___findChildren_setList2(void* ptr, void* i);
void* DictTab___findChildren_newList2(void* ptr);
void* DictTab___findChildren_atList3(void* ptr, int i);
void DictTab___findChildren_setList3(void* ptr, void* i);
void* DictTab___findChildren_newList3(void* ptr);
void* DictTab___findChildren_atList(void* ptr, int i);
void DictTab___findChildren_setList(void* ptr, void* i);
void* DictTab___findChildren_newList(void* ptr);
void* DictTab___children_atList(void* ptr, int i);
void DictTab___children_setList(void* ptr, void* i);
void* DictTab___children_newList(void* ptr);
void* DictTab_NewDictTab(void* parent);
void DictTab_DestroyDictTab(void* ptr);
void DictTab_DestroyDictTabDefault(void* ptr);
char DictTab_EventDefault(void* ptr, void* e);
char DictTab_EventFilterDefault(void* ptr, void* watched, void* event);
void DictTab_ChildEventDefault(void* ptr, void* event);
void DictTab_ConnectNotifyDefault(void* ptr, void* sign);
void DictTab_CustomEventDefault(void* ptr, void* event);
void DictTab_DeleteLaterDefault(void* ptr);
void DictTab_DisconnectNotifyDefault(void* ptr, void* sign);
void DictTab_TimerEventDefault(void* ptr, void* event);
;

#ifdef __cplusplus
}
#endif

#endif